generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model mood {
  id            Int             @id(map: "PK_cd069bf46deedf0ef3a7771f44b") @default(autoincrement())
  emotion       String
  date          DateTime        @db.Timestamp(6)
  description   String
  createdAt     DateTime        @default(now()) @db.Timestamp(6)
  updatedAt     DateTime        @default(now()) @db.Timestamp(6)
  userId        Int?
  user          user?           @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_063b678cbb2c84dfd95dff5da22")
  mood_tags_tag mood_tags_tag[]
}

model mood_tags_tag {
  moodId Int
  tagId  Int
  mood   mood @relation(fields: [moodId], references: [id], onDelete: Cascade, map: "FK_7b0ca4cb0ef7a3bdc1364aaded1")
  tag    tag  @relation(fields: [tagId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b57f58319074f0d9228e0c1a552")

  @@id([moodId, tagId], map: "PK_eb8ec461f98999f683d7f927587")
  @@index([moodId], map: "IDX_7b0ca4cb0ef7a3bdc1364aaded")
  @@index([tagId], map: "IDX_b57f58319074f0d9228e0c1a55")
}

model tag {
  id            Int             @id(map: "PK_8e4052373c579afc1471f526760") @default(autoincrement())
  name          String
  icon          String          @default("")
  createdAt     DateTime        @default(now()) @db.Timestamp(6)
  updatedAt     DateTime        @default(now()) @db.Timestamp(6)
  userId        Int?
  user          user?           @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d0dc39ff83e384b4a097f47d3f5")
  mood_tags_tag mood_tags_tag[]
}

model user {
  id            Int      @id(map: "PK_cace4a159ff9f2512dd42373760") @default(autoincrement())
  authId        String   @db.VarChar
  nickname      String?  @db.VarChar
  email         String   @unique(map: "IDX_e12875dfb3b1d92d7d7c5377e2") @db.VarChar
  pictureUrl    String   @db.VarChar
  settings      Json     @default("{\"hasCompanion\": false, \"hasGoogleFitness\": false, \"hasFinishedTutorial\": false}")
  refreshToken  String   @default("") @db.VarChar
  lastLogin     DateTime @db.Timestamp(6)
  createdAt     DateTime @default(now()) @db.Timestamp(6)
  currentStreak Int      @default(0)
  longestStreak Int      @default(0)
  updatedAt     DateTime @default(now()) @db.Timestamp(6)
  mood          mood[]
  tag           tag[]
}
